/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface DtCard {
    'cardId': string;
    'title': string;
  }
  interface DtColorPalette {
    'color': string;
  }
  interface DtColorPicker {
    'name': string;
  }
  interface DtMain {}
  interface DtTab {
    'tab': string;
  }
  interface DtTabBar {}
  interface DtTabButton {
    'disabled': boolean;
    'tab': string;
  }
  interface DtTabs {
    'tab': string;
  }
  interface DtTemplate {
    'name': string;
  }
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
}

declare global {


  interface HTMLDtCardElement extends Components.DtCard, HTMLStencilElement {}
  var HTMLDtCardElement: {
    prototype: HTMLDtCardElement;
    new (): HTMLDtCardElement;
  };

  interface HTMLDtColorPaletteElement extends Components.DtColorPalette, HTMLStencilElement {}
  var HTMLDtColorPaletteElement: {
    prototype: HTMLDtColorPaletteElement;
    new (): HTMLDtColorPaletteElement;
  };

  interface HTMLDtColorPickerElement extends Components.DtColorPicker, HTMLStencilElement {}
  var HTMLDtColorPickerElement: {
    prototype: HTMLDtColorPickerElement;
    new (): HTMLDtColorPickerElement;
  };

  interface HTMLDtMainElement extends Components.DtMain, HTMLStencilElement {}
  var HTMLDtMainElement: {
    prototype: HTMLDtMainElement;
    new (): HTMLDtMainElement;
  };

  interface HTMLDtTabElement extends Components.DtTab, HTMLStencilElement {}
  var HTMLDtTabElement: {
    prototype: HTMLDtTabElement;
    new (): HTMLDtTabElement;
  };

  interface HTMLDtTabBarElement extends Components.DtTabBar, HTMLStencilElement {}
  var HTMLDtTabBarElement: {
    prototype: HTMLDtTabBarElement;
    new (): HTMLDtTabBarElement;
  };

  interface HTMLDtTabButtonElement extends Components.DtTabButton, HTMLStencilElement {}
  var HTMLDtTabButtonElement: {
    prototype: HTMLDtTabButtonElement;
    new (): HTMLDtTabButtonElement;
  };

  interface HTMLDtTabsElement extends Components.DtTabs, HTMLStencilElement {}
  var HTMLDtTabsElement: {
    prototype: HTMLDtTabsElement;
    new (): HTMLDtTabsElement;
  };

  interface HTMLDtTemplateElement extends Components.DtTemplate, HTMLStencilElement {}
  var HTMLDtTemplateElement: {
    prototype: HTMLDtTemplateElement;
    new (): HTMLDtTemplateElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'dt-card': HTMLDtCardElement;
    'dt-color-palette': HTMLDtColorPaletteElement;
    'dt-color-picker': HTMLDtColorPickerElement;
    'dt-main': HTMLDtMainElement;
    'dt-tab': HTMLDtTabElement;
    'dt-tab-bar': HTMLDtTabBarElement;
    'dt-tab-button': HTMLDtTabButtonElement;
    'dt-tabs': HTMLDtTabsElement;
    'dt-template': HTMLDtTemplateElement;
    'my-component': HTMLMyComponentElement;
  }
}

declare namespace LocalJSX {
  interface DtCard {
    'cardId'?: string;
    'onCardDeleted'?: (event: CustomEvent<any>) => void;
    'onCardDuplicated'?: (event: CustomEvent<any>) => void;
    'title'?: string;
  }
  interface DtColorPalette {
    'color'?: string;
  }
  interface DtColorPicker {
    'name'?: string;
  }
  interface DtMain {}
  interface DtTab {
    'tab'?: string;
  }
  interface DtTabBar {}
  interface DtTabButton {
    'disabled'?: boolean;
    'tab'?: string;
  }
  interface DtTabs {
    'tab'?: string;
  }
  interface DtTemplate {
    'name'?: string;
  }
  interface MyComponent {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface IntrinsicElements {
    'dt-card': DtCard;
    'dt-color-palette': DtColorPalette;
    'dt-color-picker': DtColorPicker;
    'dt-main': DtMain;
    'dt-tab': DtTab;
    'dt-tab-bar': DtTabBar;
    'dt-tab-button': DtTabButton;
    'dt-tabs': DtTabs;
    'dt-template': DtTemplate;
    'my-component': MyComponent;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'dt-card': LocalJSX.DtCard & JSXBase.HTMLAttributes<HTMLDtCardElement>;
      'dt-color-palette': LocalJSX.DtColorPalette & JSXBase.HTMLAttributes<HTMLDtColorPaletteElement>;
      'dt-color-picker': LocalJSX.DtColorPicker & JSXBase.HTMLAttributes<HTMLDtColorPickerElement>;
      'dt-main': LocalJSX.DtMain & JSXBase.HTMLAttributes<HTMLDtMainElement>;
      'dt-tab': LocalJSX.DtTab & JSXBase.HTMLAttributes<HTMLDtTabElement>;
      'dt-tab-bar': LocalJSX.DtTabBar & JSXBase.HTMLAttributes<HTMLDtTabBarElement>;
      'dt-tab-button': LocalJSX.DtTabButton & JSXBase.HTMLAttributes<HTMLDtTabButtonElement>;
      'dt-tabs': LocalJSX.DtTabs & JSXBase.HTMLAttributes<HTMLDtTabsElement>;
      'dt-template': LocalJSX.DtTemplate & JSXBase.HTMLAttributes<HTMLDtTemplateElement>;
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
    }
  }
}


