/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  Model,
} from './components/model';

export namespace Components {
  interface DtColorPicker {
    'name': string;
  }
  interface DtMain {
    'model': Model;
  }
  interface GxgCard {
    'title': string;
  }
  interface GxgColorPalette {
    'color': string;
  }
  interface GxgTab {
    'tab': string;
  }
  interface GxgTabBar {}
  interface GxgTabButton {
    'disabled': boolean;
    'tab': string;
  }
  interface GxgTabs {
    'tab': string;
  }
  interface GxgTemplate {
    'name': string;
  }
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
}

declare global {


  interface HTMLDtColorPickerElement extends Components.DtColorPicker, HTMLStencilElement {}
  var HTMLDtColorPickerElement: {
    prototype: HTMLDtColorPickerElement;
    new (): HTMLDtColorPickerElement;
  };

  interface HTMLDtMainElement extends Components.DtMain, HTMLStencilElement {}
  var HTMLDtMainElement: {
    prototype: HTMLDtMainElement;
    new (): HTMLDtMainElement;
  };

  interface HTMLGxgCardElement extends Components.GxgCard, HTMLStencilElement {}
  var HTMLGxgCardElement: {
    prototype: HTMLGxgCardElement;
    new (): HTMLGxgCardElement;
  };

  interface HTMLGxgColorPaletteElement extends Components.GxgColorPalette, HTMLStencilElement {}
  var HTMLGxgColorPaletteElement: {
    prototype: HTMLGxgColorPaletteElement;
    new (): HTMLGxgColorPaletteElement;
  };

  interface HTMLGxgTabElement extends Components.GxgTab, HTMLStencilElement {}
  var HTMLGxgTabElement: {
    prototype: HTMLGxgTabElement;
    new (): HTMLGxgTabElement;
  };

  interface HTMLGxgTabBarElement extends Components.GxgTabBar, HTMLStencilElement {}
  var HTMLGxgTabBarElement: {
    prototype: HTMLGxgTabBarElement;
    new (): HTMLGxgTabBarElement;
  };

  interface HTMLGxgTabButtonElement extends Components.GxgTabButton, HTMLStencilElement {}
  var HTMLGxgTabButtonElement: {
    prototype: HTMLGxgTabButtonElement;
    new (): HTMLGxgTabButtonElement;
  };

  interface HTMLGxgTabsElement extends Components.GxgTabs, HTMLStencilElement {}
  var HTMLGxgTabsElement: {
    prototype: HTMLGxgTabsElement;
    new (): HTMLGxgTabsElement;
  };

  interface HTMLGxgTemplateElement extends Components.GxgTemplate, HTMLStencilElement {}
  var HTMLGxgTemplateElement: {
    prototype: HTMLGxgTemplateElement;
    new (): HTMLGxgTemplateElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'dt-color-picker': HTMLDtColorPickerElement;
    'dt-main': HTMLDtMainElement;
    'gxg-card': HTMLGxgCardElement;
    'gxg-color-palette': HTMLGxgColorPaletteElement;
    'gxg-tab': HTMLGxgTabElement;
    'gxg-tab-bar': HTMLGxgTabBarElement;
    'gxg-tab-button': HTMLGxgTabButtonElement;
    'gxg-tabs': HTMLGxgTabsElement;
    'gxg-template': HTMLGxgTemplateElement;
    'my-component': HTMLMyComponentElement;
  }
}

declare namespace LocalJSX {
  interface DtColorPicker {
    'name'?: string;
  }
  interface DtMain {
    'model'?: Model;
  }
  interface GxgCard {
    'title'?: string;
  }
  interface GxgColorPalette {
    'color'?: string;
  }
  interface GxgTab {
    'tab'?: string;
  }
  interface GxgTabBar {}
  interface GxgTabButton {
    'disabled'?: boolean;
    'tab'?: string;
  }
  interface GxgTabs {
    'tab'?: string;
  }
  interface GxgTemplate {
    'name'?: string;
  }
  interface MyComponent {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface IntrinsicElements {
    'dt-color-picker': DtColorPicker;
    'dt-main': DtMain;
    'gxg-card': GxgCard;
    'gxg-color-palette': GxgColorPalette;
    'gxg-tab': GxgTab;
    'gxg-tab-bar': GxgTabBar;
    'gxg-tab-button': GxgTabButton;
    'gxg-tabs': GxgTabs;
    'gxg-template': GxgTemplate;
    'my-component': MyComponent;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'dt-color-picker': LocalJSX.DtColorPicker & JSXBase.HTMLAttributes<HTMLDtColorPickerElement>;
      'dt-main': LocalJSX.DtMain & JSXBase.HTMLAttributes<HTMLDtMainElement>;
      'gxg-card': LocalJSX.GxgCard & JSXBase.HTMLAttributes<HTMLGxgCardElement>;
      'gxg-color-palette': LocalJSX.GxgColorPalette & JSXBase.HTMLAttributes<HTMLGxgColorPaletteElement>;
      'gxg-tab': LocalJSX.GxgTab & JSXBase.HTMLAttributes<HTMLGxgTabElement>;
      'gxg-tab-bar': LocalJSX.GxgTabBar & JSXBase.HTMLAttributes<HTMLGxgTabBarElement>;
      'gxg-tab-button': LocalJSX.GxgTabButton & JSXBase.HTMLAttributes<HTMLGxgTabButtonElement>;
      'gxg-tabs': LocalJSX.GxgTabs & JSXBase.HTMLAttributes<HTMLGxgTabsElement>;
      'gxg-template': LocalJSX.GxgTemplate & JSXBase.HTMLAttributes<HTMLGxgTemplateElement>;
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
    }
  }
}


